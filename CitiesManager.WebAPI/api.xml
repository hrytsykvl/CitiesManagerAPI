<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CitiesManager.WebAPI</name>
    </assembly>
    <members>
        <member name="T:CitiesManager.WebAPI.Controllers.v1.AccountController">
            <summary>
            Controller for account actions
            </summary>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.#ctor(Microsoft.AspNetCore.Identity.UserManager{CitiesManager.Core.Identity.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{CitiesManager.Core.Identity.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{CitiesManager.Core.Identity.ApplicationRole})">
            <summary>
            
            </summary>
            <param name="userManager"></param>
            <param name="signInManager"></param>
            <param name="roleManager"></param>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.PostRegister(CitiesManager.Core.DTO.RegisterDTO)">
            <summary>
            Registers account in database
            </summary>
            <param name="registerDTO"></param>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.IsEmailAlreadyRegistered(System.String)">
            <summary>
            Defines if user already registered
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.PostLogin(CitiesManager.Core.DTO.LoginDTO)">
            <summary>
            Log in the user
            </summary>
            <param name="loginDTO"></param>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.GetLogout(CitiesManager.Core.DTO.LoginDTO)">
            <summary>
            Log out the user
            </summary>
            <param name="loginDTO"></param>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.CitiesController.GetCities">
            <summary>
            Get list of citites (including city ID and city name) from 'cities' table
            </summary>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.CitiesController.GetCity(System.Guid)">
            <summary>
            Get city details by city id from 'cities' table
            </summary>
            <param name="id">City id to get</param>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.CitiesController.PutCity(System.Guid,CitiesManager.Core.Models.City)">
            <summary>
            Update city name by city id in 'cities' table
            </summary>
            <param name="cityID">City id to update</param>
            <param name="city">City name to update</param>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.CitiesController.PostCity(CitiesManager.Core.Models.City)">
            <summary>
            Create and add new city into 'cities' table
            </summary>
            <param name="city">Created city object</param>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.CitiesController.DeleteCity(System.Guid)">
            <summary>
            Delete city by city id from 'cities' table
            </summary>
            <param name="id">City id to delete</param>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v2.CitiesController.GetCities">
            <summary>
            Get list of citites (including city ID and city name) from 'cities' table
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
